{"version":3,"sources":["components/Signup.js","components/Login.js","components/BidBook.js","components/Booking.js","components/BuildingCard.js","App.js","reportWebVitals.js","index.js"],"names":["Signup","props","useState","user","setUser","className","placeholder","name","value","onChange","e","target","username","type","password","onClick","preventDefault","console","log","fetch","method","headers","accept","body","JSON","stringify","then","res","json","newUser","catch","error","toggle","Login","login","setLogin","signupToggle","setSignupToggle","message","setMessage","renderSignup","setCurrentUser","BidBook","bid","setBid","updateBooking","maxBid","bookingObj","user_id","id","building_id","building","start_time","date","startDate","end_time","endDate","confirmed","bookBuilding","setBidBook","max_piriority_point","min_piriority_point","style","color","min","max","piriority_point","Booking","Date","booking","toLocaleDateString","BuildingCard","bookToggle","setBookToggle","setBooking","bidBook","booked","setBooked","pp","updatedPiriorityPoint","currentUser","bo","window","alert","src","img_url","location","myBuilding","selected","bookings","length","find","handleBooking","map","App","buildings","setBuildings","useEffect","myBuildings","i","j","includes","push","b","renderBookings","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b16ba6ea.chunk.js","sourcesContent":["import { useState } from \"react\"\nconst Signup=(props)=>{\n    const [user, setUser]=useState({})\n    \n    const handleSubmit=(e)=>{\n        e.preventDefault()\n        console.log(user)\n        fetch(`http://localhost:3000/users`, {\n            method: \"POST\",\n            headers: {\n                accept: 'application/json',\n                \"content-type\": 'application/json'\n            },\n            body: JSON.stringify({\n                name: user.name,\n                username: user.username,\n                password: user.password\n            })\n        })\n        .then(res=>res.json())\n        .then(newUser=>{\n            console.log(newUser)\n        })\n        .catch(error=>console.log(error))\n        props.toggle(e)\n    }\n    return(\n        <div className ='signup-modal'>\n            <div className='signup-modal-content'>\n                {/* <h1 className ='close'> X </h1> */}\n                <h1 className='login-header'>Sign Up</h1>\n                <form\n                className = \"login-form\"\n                >\n                    <input\n                    placeholder = 'Name'\n                    name = \"name\"\n                    value = {user.name}\n                    onChange ={(e)=>setUser({...user, name: e.target.value})}\n                    />\n                    <input\n                    placeholder = 'username please'\n                    name = \"username\"\n                    value = {user.username}\n                    onChange ={(e)=>setUser({...user, username: e.target.value})}\n                    />\n                    <input\n                    type =\"password\"\n                    name = \"password\"\n                    value = {user.password}\n                    onChange ={(e)=>setUser({...user, password: e.target.value})}\n                    placeholder = 'start typing your password'\n                    />\n                    <div>\n                        <button\n                            onClick={handleSubmit}\n                        >Sign Up</button>\n                    </div>\n                \n                </form>\n            </div>\n        </div>\n        \n    )\n\n}\nexport default Signup","\nimport { useState } from \"react\"\nimport Signup from \"./Signup\"\n\nconst Login =(props)=>{\n    const [login, setLogin] = useState({})\n    const [signupToggle, setSignupToggle]=useState(false)\n    const [message,setMessage] =useState(\"\")\n    const handleSubmit =(e)=>{\n        e.preventDefault()\n        fetch(`http://localhost:3000/users/${login.username}`)\n        .then(res=>res.json())\n        .then(user=>{\n            if(user){\n                if(user.password===login.password){\n                    console.log('logged in')\n                    props.setCurrentUser(user)\n                    setMessage('')\n                }else{\n                    setMessage('Wrong password, try 123!')\n                }\n                \n            }else{\n                setMessage('No username found, try tsering!')\n            }\n        })\n    }\n    \n    const renderSignup =(e)=>{\n        e.preventDefault()\n        setSignupToggle(!signupToggle)\n    }\n    return(\n        <div>\n            <h1 className='login-header'>Login</h1>\n            <form\n            className = \"login-form\"\n            >\n                <input\n                placeholder = 'username please'\n                name = \"username\"\n                value = {login.username}\n                onChange ={(e)=>setLogin({...login, username: e.target.value})}\n                />\n                <input\n                type =\"password\"\n                name = \"password\"\n                value = {login.password}\n                onChange ={(e)=>setLogin({...login, password: e.target.value})}\n                placeholder = 'start typing your password'\n                />\n                <label className = 'login-message'>\n                {message}\n                </label>\n                <div>\n                    <button\n                        onClick={handleSubmit}\n                    >Log In</button>\n                    <button\n                    onClick={renderSignup}\n                    >Sign Up</button>\n                </div>\n                \n            </form>\n        {signupToggle && <Signup toggle={renderSignup}/>}\n        </div>\n        )\n}\n\nexport default Login","import { useState } from \"react\"\n\nconst BidBook=(props)=>{\n    const [message,setMessage]=useState(\"\")\n    const [bid, setBid]=useState(0)\n    const handleBooking =()=>{\n        let maxBid=false\n           if(bid<props.building.min_piriority_point){\n               setMessage(`Minimum bid is ${props.building.min_piriority_point}`)\n           }else if(bid>props.building.max_piriority_point){\n            setMessage(`Minimum bid is ${props.building.min_piriority_point}!`)\n           }else{\n               if(props.building.max_piriority_point==bid){\n                maxBid=true\n               }\n               updateBooking(maxBid)\n           }\n       }\n\n       const updateBooking=(maxBid)=>{\n        let bookingObj={\n            user_id: props.user.id,\n            building_id: props.building.id,\n            start_time: props.date.startDate,\n            end_time: props.date.endDate,\n            confirmed: maxBid\n           }\n           props.bookBuilding(bookingObj,bid)\n           props.setBidBook(false)\n       }\n    return(\n       \n        <div className=\"signup-modal\">\n            <div className = \"signup-modal-content\">\n                <h3>Bid Book This Building!</h3>\n                <h4>This building is already booked, the good news is you can still bid book it!</h4>\n                <h4>Max Bid: {props.building.max_piriority_point}</h4>\n                <h4>Min Bid: {props.building.min_piriority_point}</h4>\n                <label style={{color:\"red\"}}>{message}</label>\n                <input\n                type='number'\n                min='0'\n                max ={props.user.piriority_point}\n                onChange={(e)=>setBid(e.target.value)}\n                value={bid}\n                />\n                <div>\n                    <button\n                    onClick={handleBooking}\n                    >Bid Book</button>\n                    <button\n                    onClick={()=>props.setBidBook(false)}\n                    >Go Back</button>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default BidBook","const Booking=(props)=>{\n    return(\n        <div>\n            <h3>From: {new Date(props.booking.start_time).toLocaleDateString()} \n            to: {new Date(props.booking.end_time).toLocaleDateString()}\n            </h3>\n        </div>\n    )\n}\nexport default Booking","import { useState } from \"react\"\nimport DatePicker from \"react-datepicker\";\nimport BidBook from \"./BidBook\";\nimport Booking from \"./Booking\";\nconst BuildingCard =(props)=>{\n    const [bookToggle, setBookToggle] =useState(false)\n    const [booking,setBooking] =useState({startDate: new Date(), endDate:new Date()})\n    const [bidBook, setBidBook] =useState(false)\n    const [booked,setBooked] =useState()\n    \n    const handleBooking = (e)=>{\n\n        e.preventDefault()\n        console.log('clicked')\n        if(props.building.bookings.length>0){\n           let booked = props.building.bookings.find(bo=>{\n               if(new Date(bo.start_time)<new Date(booking.startDate)){\n                   if(new Date(bo.end_time)> new Date(booking.startDate) ||new Date(bo.end_time)> new Date(booking.endDate)){\n                       return bo\n                   }\n               }else if(new Date(bo.start_time)>new Date(booking.startDate)){\n                if(new Date(bo.start_time)< new Date(booking.endDate) || new Date(bo.end_time) < new Date(booking.endDate)){\n                    return bo\n                }\n               }\n           })\n           if(booked){\n            if(booked.confirmed){\n                window.alert('Already booked, try other date!')\n            }else{\n                setBooked(booked)\n                setBidBook(true)\n            }\n            \n           }else{\n            let confirmed = (booking.startDate -new Date())<=86400000\n            let bookingObj={\n                user_id: props.currentUser.id,\n                building_id: props.building.id,\n                start_time: booking.startDate,\n                end_time: booking.endDate,\n                confirmed: confirmed\n            }\n            bookBuilding(bookingObj)\n           }\n           \n        }else{\n            let confirmed = (booking.startDate -new Date())<=86400000\n            let bookingObj={\n                user_id: props.currentUser.id,\n                building_id: props.building.id,\n                start_time: booking.startDate,\n                end_time: booking.endDate,\n                confirmed: confirmed\n            }\n            \n            bookBuilding(bookingObj)\n        }\n        \n    }\n    const bookBuilding=(bookingObj, pp=0)=>{\n\n        let updatedPiriorityPoint=props.currentUser.piriority_point-pp\n        console.log(bookingObj)\n        fetch(`http://localhost:3000/bookings`,{\n            method: 'POST',\n            headers: {\n                'accept': 'application/json',\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(bookingObj)\n        })\n        .then(res=>res.json())\n        .then(bo=>{\n            if(bo){\n                fetch(`http://localhost:3000/users/${props.currentUser.id}`,{\n                    method: 'PATCH',\n                    headers: {\n                        'accept': 'application/json',\n                        'content-type': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        piriority_point: updatedPiriorityPoint\n                    })\n                })\n                .then(res=>res.json())\n                .then(newUser=>{\n                    if(newUser){\n                        props.setCurrentUser(newUser)\n                        console.log(newUser)\n                        window.alert(\"Your booking has confirmed and we will keep you updated\")\n                    }\n                })\n            }else{\n                window.alert('System Error')\n            }\n            \n        })\n    }\n    const renderDatePicker=()=>{\n        return(\n            <div className='date-container'>\n                <h3>From</h3>\n\n                <DatePicker \n                    selected ={booking.startDate}\n                    onChange ={(date)=>setBooking({...booking, startDate: new Date(date)})}\n                />\n                <h3>To</h3>\n                <DatePicker \n                    selected ={booking.endDate}\n                    onChange ={(date)=>setBooking({...booking, endDate:new Date(date)})}\n                />\n                <button\n                onClick={(e)=>handleBooking(e)}\n                >Confirm</button>\n            </div> \n            )\n    }\n    return(\n        <div className='building-container'>\n            <h2>{props.building.name}</h2>\n            <img src={props.building.img_url}/>\n            <h3>Location: {props.building.location}</h3>\n            <button\n            onClick={()=>setBookToggle(!bookToggle)}\n            >{props.myBuilding?'Cancel':'Book'}</button>\n            {bookToggle && renderDatePicker()}\n            {props.myBuilding && \n            <div>\n                {props.building.bookings.map(bo=><Booking booking ={bo}/>)}\n            </div>\n            }\n            {bidBook && <BidBook\n                user = {props.currentUser}\n                building = {props.building}\n                setBidBook ={setBidBook}\n                booked ={booked}\n                date={booking}\n                bookBuilding={bookBuilding}\n            />}\n        </div>\n    )\n}\nexport default BuildingCard","import './App.css';\nimport Login from './components/Login';\nimport BuildingCard from './components/BuildingCard'\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const [currentUser,setCurrentUser] = useState({})\n  const [buildings,setBuildings]=useState([])\n  \n  useEffect(()=>{\n    fetch('http://localhost:3000/buildings')\n    .then(res=>res.json())\n    .then(buildings=>{\n      setBuildings(buildings)\n    })\n  },[])\n  const renderBookings=()=>{\n    if(currentUser.bookings.length>0){\n      let myBuildings=[]\n      for(let i=0; i<currentUser.bookings.length; i++){\n        for(let j=0; j<buildings.length; j++){\n          if(buildings[j].id===currentUser.bookings[i].building_id){\n            if(!myBuildings.includes(buildings[j])){\n              myBuildings.push(buildings[j])\n            }\n            \n          }\n        }\n      }\n      return(\n        <div className = 'my-building'>\n          <h1>My Bookings</h1>\n            <div className= 'building-card-container'>\n              { myBuildings.map(b=><BuildingCard \n              myBuilding={true} \n              building={b}\n              key ={b.id}\n              />)}\n            </div>\n           \n        </div>\n      )\n    }else{\n      return(\n        <div className ='my-building'>\n          <h1>My Bookings</h1>\n              <h3>You don't have any bookings! Book now from following list!\n              </h3>\n        </div>\n      ) \n    }\n  }\n  return (\n    <div className=\"App\">\n      {!currentUser.username && <Login\n      setCurrentUser={setCurrentUser}\n      />}\n      \n      {currentUser.username &&\n      <div className ='main-container'>\n        <h1>Hi, {currentUser.name}!</h1>\n        <h3>Available PPs: {currentUser.piriority_point}</h3>\n        <div>\n          {renderBookings()}\n        </div>\n        <div className='building-card-container'>\n          { buildings.map(b=><BuildingCard \n            key={b.id} \n            building={b} \n            myBuilding={false}\n            setCurrentUser={setCurrentUser}\n            currentUser ={currentUser}\n            />)}\n        </div>\n      </div>\n       }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}